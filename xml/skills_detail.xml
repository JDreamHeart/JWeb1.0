<?xml version="1.0" encoding="utf-8"?>
<root xmlns="skill_detail">
	<skill name="MATLAB">
		<introduce>
			<p>MATLAB是美国MathWorks公司出品的商业数学软件，用于算法开发、数据可视化、数据分析以及数值计算的高级技术计算语言和交互式环境，主要包括MATLAB和Simulink两大部分。</p>
			<p>
				MATLAB是matrix&amp;laboratory两个词的组合，意为矩阵工厂（矩阵实验室）。
				是由美国mathworks公司发布的主要面对科学计算、可视化以及交互式程序设计的高科技计算环境。
				它将数值分析、矩阵计算、科学数据可视化以及非线性动态系统的建模和仿真等诸多强大功能集成在一个易于使用的视窗环境中，为科学研究、工程设计以及必须进行有效数值计算的众多科学领域提供了一种全面的解决方案，并在很大程度上摆脱了传统非交互式程序设计语言（如C、Fortran）的编辑模式，代表了当今国际科学计算软件的先进水平。
			</p>
			<p>
				MATLAB和Mathematica、Maple并称为三大数学软件。它在数学类科技应用软件中在数值计算方面首屈一指。
				MATLAB可以进行矩阵运算、绘制函数和数据、实现算法、创建用户界面、连接其他编程语言的程序等，主要应用于工程计算、控制设计、信号处理与通讯、图像处理、信号检测、金融建模设计与分析等领域。
			</p>
			<p>
				MATLAB的基本数据单位是矩阵，它的指令表达式与数学、工程中常用的形式十分相似，故用MATLAB来解算问题要比用C，FORTRAN等语言完成相同的事情简捷得多，并且MATLAB也吸收了像Maple等软件的优点，使MATLAB成为一个强大的数学软件。
				在新的版本中也加入了对C，FORTRAN，C++，JAVA的支持。
			</p>
		</introduce>
	</skill>
	<skill name="JavaScript">
		<introduce>
			<p>
				JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。
				它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。
			</p>
			<p>
				在1995年时，由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。
				因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。
				但实际上它的语法风格与Self及Scheme较为接近。
			</p>
			<p>
				为了取得技术优势，微软推出了JScript，CEnvi推出ScriptEase，与JavaScript同样可在浏览器上运行。
				为了统一规格，因为JavaScript兼容于ECMA标准，因此也称为ECMAScript。
			</p>
			<p>
				JavaScript是一种属于网络的脚本语言,已经被广泛用于Web应用开发,常用来为网页添加各式各样的动态功能,为用户提供更流畅美观的浏览效果。
				通常JavaScript脚本是通过嵌入在HTML中来实现自身的功能的。
			</p>
			<p>1.是一种解释性脚本语言（代码不进行预编译）。</p>
			<p>2.主要用来向HTML（标准通用标记语言下的一个应用）页面添加交互行为。</p> 
			<p>3.可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。</p>
			<p>4.跨平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行（如Windows、Linux、Mac、Android、iOS等）。</p>
			<p>
				Javascript脚本语言同其他语言一样，有它自身的基本数据类型，表达式和算术运算符及程序的基本程序框架。
				Javascript提供了四种基本的数据类型和两种特殊数据类型用来处理数据和文字。
				而变量提供存放信息的地方，表达式则可以完成较复杂的信息处理。
			</p>
		</introduce>
	</skill>
	<skill name="HTML">
		<introduce>
			<p>HyperText Markup Language,超文本标记语言，标准通用标记语言下的一个应用。</p>
			<p>“超文本”就是指页面内可以包含图片、链接，甚至音乐、程序等非文字元素。</p>
			<p>超文本标记语言的结构包括“头”部分（英语：Head）、和“主体”部分（英语：Body），其中“头”部提供关于网页的信息，“主体”部分提供网页的具体内容。</p>
			<p>超级文本标记语言文档制作不是很复杂，但功能强大，支持不同数据格式的文件镶入，这也是万维网（WWW）盛行的原因之一，其主要特点如下：</p>
			<p>1.简易性：超级文本标记语言版本升级采用超集方式，从而更加灵活方便。</p>
			<p>2.可扩展性：超级文本标记语言的广泛应用带来了加强功能，增加标识符等要求，超级文本标记语言采取子类元素的方式，为系统扩展带来保证。</p>
			<p>3.平台无关性：虽然个人计算机大行其道，但使用MAC等其他机器的大有人在，超级文本标记语言可以使用在广泛的平台上，这也是万维网（WWW）盛行的另一个原因</p>
			<p>
				4.通用性：另外，HTML是网络的通用语言,一种简单、通用的全置标记语言。
				它允许网页制作人建立文本与图片相结合的复杂页面，这些页面可以被网上任何其他人浏览到，无论使用的是什么类型的电脑或浏览器。
			</p>
		</introduce>
	</skill>
	<skill name="CSS">
		<introduce>
			<p>层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。</p>
			<p>
				CSS目前最新版本为CSS3，是能够真正做到网页表现与内容分离的一种样式设计语言。
				相对于传统HTML的表现而言，CSS能够对网页中的对象的位置排版进行像素级的精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力，并能够进行初步交互设计，是目前基于文本展示最优秀的表现设计语言。
				CSS能够根据不同使用者的理解能力，简化或者优化写法，针对各类人群，有较强的易读性。
			</p>
		</introduce>
	</skill>
	<skill name="JSP">
		<introduce>
			<p>
				JSP全名为Java Server Pages，中文名叫java服务器页面，其根本是一个简化的Servlet设计，它是由Sun Microsystems公司倡导、许多公司参与一起建立的一种动态网页技术标准。
				JSP技术有点类似ASP技术，它是在传统的网页HTML（标准通用标记语言的子集）文件(*.htm,*.html)中插入Java程序段(Scriptlet)和JSP标记(tag)，从而形成JSP文件，后缀名为(*.jsp)。 
				用JSP开发的Web应用是跨平台的，既能在Linux下运行，也能在其他操作系统上运行。
			</p>
			<p>
				它实现了Html语法中的java扩展（以 &lt;%,%&gt;形式）。
				JSP与Servlet一样，是在服务器端执行的。
				通常返回给客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。
			</p>
			<p>
				JSP技术使用Java编程语言编写类XML的tags和scriptlets，来封装产生动态网页的处理逻辑。
				网页还能通过tags和scriptlets访问存在于服务端的资源的应用逻辑。JSP将网页逻辑与网页设计的显示分离，支持可重用的基于组件的设计，使基于Web的应用程序的开发变得迅速和容易。 
				JSP(JavaServer Pages)是一种动态页面技术，它的主要目的是将表示逻辑从Servlet中分离出来。
			</p>
			<p>
				Java Servlet是JSP的技术基础，而且大型的Web应用程序的开发需要Java Servlet和JSP配合才能完成。
				JSP具备了Java技术的简单易用，完全的面向对象，具有平台无关性且安全可靠，主要面向因特网的所有特点。
			</p>
		</introduce>
	</skill>
	<skill name="Java">
		<introduce>
			<p>
				Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。
				Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。
			</p>
			<p>
				Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。
				Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。
			</p>
		</introduce>
	</skill>
</root>